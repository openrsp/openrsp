.. _slide-overlap:

=================
Overlap Integrals
=================
.. include:: background.rst

OpenRSP API: OpenRSPSetPDBS
===========================
.. include:: background.rst

During calculations, OpenRSP will invoke host program's callback
functions to calculate (perturbed) overlap integrals
:math:`\left\langle\tilde{\chi}_{\mu}^{a_{\mu}b_{\mu}\cdots}\left| %
\tilde{\chi}_{\nu}^{a_{\nu}b_{\nu}\cdots}\right.\right\rangle^{ab\cdots}`
and expectation values (by contracting with an array of density matrices
sent by OpenRSP), where :math:`a_{\mu}b_{\mu}\cdots`, :math:`a_{\nu}b_{\nu}\cdots`
and :math:`ab\cdots` are respectively perturbation tuples on the bra,
the ket and overlap integrals, which are generated by OpenRSP in its
recursive routine.

However, one should note that OpenRSP will only ask for
:math:`\left\langle\tilde{\chi}_{\mu}^{a_{\mu}b_{\mu}\cdots}\left| %
\tilde{\chi}_{\nu}^{a_{\nu}b_{\nu}\cdots}\right.\right\rangle`
or :math:`\left\langle\tilde{\chi}_{\mu}\left|\tilde{\chi}_{\nu}\right.\right\rangle^{ab\cdots}`
instead of the more general case as aforementioned.

To send such callback functions and different perturbation labels
that can act as perturbations on the basis sets to OpenRSP, users
can call the following OpenRSP API:

.. c:function:: QErrorCode OpenRSPSetPDBS(open_rsp, num_pert, pert_labels, pert_max_orders, user_ctx, get_overlap_mat, get_overlap_exp)

The ``num_pert``, ``pert_labels`` and ``pert_max_orders`` will be
used in such a way that OpenRSP will not invoke the callback
functions if the perturbation tuples (:math:`a_{\mu}b_{\mu}\cdots`,
:math:`a_{\nu}b_{\nu}\cdots` and :math:`ab\cdots`) result in zero
overlap integrals.

The callback functions should take the following form:

.. c:function:: QVoid get_overlap_mat(bra_len_tuple, bra_pert_tuple, ket_len_tuple, ket_pert_tuple, len_tuple, pert_tuple, user_ctx, num_int, val_int)

.. c:function:: QVoid get_overlap_exp(bra_len_tuple, bra_pert_tuple, ket_len_tuple, ket_pert_tuple, len_tuple, pert_tuple, num_dmat, dens_mat, user_ctx, num_exp, val_exp)

These callback functions are described in the OpenRSP Manual,
Chapter 4 "**OPENRSP CALLBACK FUNCTIONS**". Again, the names
of these functions can be anything else.

Users could refer to this chapter and the OpenRSP unit testing
(files in ``tests``) to prepare their own callabck functions
and to use this API.

