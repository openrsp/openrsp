\section{One-Electron Operators}
\label{section-OpenRSP-WaveFunction}

Users can use the following API to add different one-electron operators:
<<OpenRSPAddOneOper.c>>=
/*
  <<OpenRSPLicense>>
*/

#include "OpenRSP.h"

/*@% \brief adds a one-electron operator to the Hamiltonian
     \author Bin Gao
     \date 2014-07-30
     \param[OpenRSP:struct]{inout} open_rsp the context of response theory calculations
     \param[QInt:int]{in} num_pert number of different perturbation labels that can
         act as perturbations on the one-electron operator
     \param[QInt:int]{in} pert_labels all the different perturbation labels
     \param[QInt:int]{in} pert_max_orders maximum allowed order of each perturbation (label)
     \param[QVoid:void]{in} user_ctx user-defined callback function context
     \param[GetOneOperMat:void]{in} get_one_oper_mat user specified function for
         getting integral matrices
     \param[GetOneOperExp:void]{in} get_one_oper_exp user specified function for
         getting expectation values
     \return[QErrorCode:int] error information
*/
QErrorCode OpenRSPAddOneOper(OpenRSP *open_rsp,
                             const QInt num_pert,
                             const QInt *pert_labels,
                             const QInt *pert_max_orders,
#if defined(OPENRSP_C_USER_CONTEXT)
                             QVoid *user_ctx,
#endif
                             const GetOneOperMat get_one_oper_mat,
                             const GetOneOperExp get_one_oper_exp)
{
    QErrorCode ierr;  /* error information */
    /* creates the linked list of one-electron operators */
    if (open_rsp->one_oper==NULL) {
        ierr = RSPOneOperCreate(&open_rsp->one_oper,
                                num_pert,
                                pert_labels,
                                pert_max_orders,
#if defined(OPENRSP_C_USER_CONTEXT)
                                user_ctx,
#endif
                                get_one_oper_mat,
                                get_one_oper_exp);
        QErrorCheckCode(ierr, FILE_AND_LINE, "calling RSPOneOperCreate");
    }
    /* adds the one-electron operator to the linked list */
    else {
        ierr = RSPOneOperAdd(open_rsp->one_oper,
                             num_pert,
                             pert_labels,
                             pert_max_orders,
#if defined(OPENRSP_C_USER_CONTEXT)
                             user_ctx,
#endif
                             get_one_oper_mat,
                             get_one_oper_exp);
        QErrorCheckCode(ierr, FILE_AND_LINE, "calling RSPOneOperAdd");
    }
    return QSUCCESS;
}
@

The header file of different one-electron operators is:
<<RSPOneOper.h>>=
/*
  <<OpenRSPLicense>>

  <header name='RSPOneOper.h' author='Bin Gao' date='2014-07-30'>
    The header file of one-electron operators used inside OpenRSP
  </header>
*/

<<RSPOneOperCreate.c>>=
/*
  <<OpenRSPLicense>>
*/

<<RSPOneOperAdd.c>>=
/*
  <<OpenRSPLicense>>
*/

<<RSPOneOperAssemble.c>>=
/*
  <<OpenRSPLicense>>
*/

<<RSPOneOperWrite.c>>=
/*
  <<OpenRSPLicense>>
*/

<<RSPOneOperGetMat.c>>=
/*
  <<OpenRSPLicense>>
*/

<<RSPOneOperGetExp.c>>=
/*
  <<OpenRSPLicense>>
*/

<<RSPOneOperDestroy.c>>=
/*
  <<OpenRSPLicense>>
*/

